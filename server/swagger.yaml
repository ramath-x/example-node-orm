openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:8000
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /users:
    get:
      tags:
        - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                additionalProperties:
                  type: integer
                  format: int32
  /api/users/{id}/address:
    get:
      tags:
        - store
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found

  /api/users/{id}:
    put:
      summary: Creates a user.
      parameters:
        - name: id
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: john wick
                addresses:
                  type: array
                  example: [
                    {
                      id: 1, 
                      address1: "london"
                    },
                    {
                      id: 2,
                      address1: "las Vegas"
                    }
                  ]

      responses: 
        '201':
          description: Created
  /user:          
    post:
      summary: Creates a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: john wick
                email:
                  type: string
                  example: wick@john.com
                addresses:
                  type: array
                  example: [
                    {
                      id: 1,
                      address1: "london"
                    },
                    {
                      id: 2,
                      address1: "las Vegas"
                    }
                  ]

      responses: 
        '201':
          description: Created          